name: Sync,hue Workflow
on:
  workflow_dispatch:
  push:
    branches: [ release-internal ]
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:

  build-android:
    name: Build the Unity project for Android
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - uses: actions/cache@v2
      with:
        path: Library
        key: Library-Android
    - uses: game-ci/unity-builder@v2
      with:
        targetPlatform: Android
        androidAppBundle: true
        androidKeystoreName: user.keystore
        androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
        androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
        androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
    - uses: actions/upload-artifact@v2
      with:
        name: build-Android
        path: build/Android

  publish-android:
    name: Publish for Android
    runs-on: ubuntu-latest
    needs: build-android
    env:
      GOOGLE_PLAY_KEY_FILE: ${{ secrets.FASTLANE_SERVICE_ACCOUNT }}
      GOOGLE_PLAY_KEY_FILE_PATH: ${{ format('{0}/fastlane/google-fastlane.json', github.workspace) }}
      ANDROID_BUILD_FILE_PATH: ${{ format('{0}/build/Android/Android.aab', github.workspace) }}
      ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Android Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-Android
          path: build/Android
      - name: Create keystore
        run: echo "$GOOGLE_PLAY_KEY_FILE" > $GOOGLE_PLAY_KEY_FILE_PATH
      - name: Cache Fastlane Dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ hashFiles('**/Gemfile.lock') }}
      - name: Install Fastlane
        run: bundle install
      - name: Upload to Google Play beta
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'android internal'

  build-ios-unity:
    name: Build the Unity project for iOS
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - uses: actions/cache@v2
      with:
        path: Library
        key: Library-iOS
    - uses: game-ci/unity-builder@v2
      with:
        targetPlatform: iOS
    - uses: actions/upload-artifact@v2
      with:
        name: build-iOS
        path: build/iOS

  publish-ios:
    name: Publish for iOS
    runs-on: macos-latest
    needs: build-ios-unity
    env:
      APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
      APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_TEAM_NAME: ${{ secrets.APPLE_TEAM_NAME }}
      MATCH_URL: ${{ secrets.MATCH_URL }}
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
      APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
      APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}
      APPSTORE_P8_PATH: ${{ format('{0}/fastlane/p8.json', github.workspace) }}
      IOS_APP_ID: com.oadugmore.platformer
      IOS_BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: actions/download-artifact@v2
        with:
          name: build-iOS
          path: build/iOS
      - name: Make App Store p8 and Fix File Permissions
        run: |
          echo "$APPSTORE_P8" > $APPSTORE_P8_PATH
          find $IOS_BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
      - name: Cache Fastlane Dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ hashFiles('**/Gemfile.lock') }}
      - name: Install Fastlane
        run: bundle install
      - name: Build the Xcode project and upload to TestFlight
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'ios beta'
